{"version":3,"file":"RewardType.service.js","sourceRoot":"","sources":["../../../../../../src/reward/+create/RewardType.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAyB,eAAe,CAAC,CAAA;AACzC,uBAA6B,eAAe,CAAC,CAAA;AAG7C,QAAO,SAAS,CAAC,CAAA;AAEjB;IACI,YAAmB,IAAY,EAAS,IAAY,EAAS,GAAW,EAAS,MAAc,EAAS,SAAkB;QAAvG,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,QAAG,GAAH,GAAG,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAS;IAE1H,CAAC;AACL,CAAC;AAJY,kBAAU,aAItB,CAAA;AAGD;IAEI,YAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAEtB,QAAG,GAAG,iBAAiB,CAAC;IAFE,CAAC;IAInC,cAAc;QACV,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;aACb,GAAG,CAAC,OAAO,IAAkB,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,aAAa,CAAC,IAAqB,EAAE,IAAkB;QACnD,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,eAAe;QACX,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;AACL,CAAC;AApBD;IAAC,iBAAU,EAAE;;qBAAA;AACA,yBAAiB,oBAmB7B,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Jsonp, URLSearchParams } from '@angular/http';\nimport 'rxjs/Rx';\n\nexport class RewardType {\n    constructor(public type: number, public name: string, public ico: string, public status: number, public isChecked: boolean) {\n\n    }\n}\n\n@Injectable()\nexport class RewardTypeService {\n\n    constructor(private http: Http) { }\n\n    private url = 'RewardType.json';\n\n    getRewardtypes() {\n        return this.http\n            .get(this.url)\n            .map(request => <RewardType[]>request.json());\n    }\n\n    updateChecked(type: number | string, list: RewardType[]) {\n        list.map(res => res.isChecked = res.type === type);\n    }\n\n    getSelectedItem() {\n        return null;\n    }\n}\n"]}