{"version":3,"file":"Account.service.js","sourceRoot":"","sources":["../../../../../../src/reward/+account/Account.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Http, Response, URLSearchParams, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport {baseUrl} from '../services/config';\n// import { Md5 } from 'ts-md5/dist/md5';\n\nconst searchUrl = baseUrl + '/rewardCheckUser/list';\nconst delUrl = baseUrl + '/rewardCheckUser/delete';\nconst addUrl = baseUrl + '/rewardCheckUser/add';\nconst editUrl = baseUrl + '/rewardCheckUser/edit';\nconst queryUrl = baseUrl + '/rewardCheckUser/query/';\n\n@Injectable()\nexport class AccountService {\n    id: number;\n    constructor(private http: Http) {\n    }\n\n    getOne(id) {\n        let search = new URLSearchParams();\n        search.set('cRCUId', id);\n        return this.http.get(queryUrl, { search: search }).map(res => res.json()).catch(this.handleError);\n    }\n\n    /**\n     * 新增和修改核验人\n     * @param  {[object]} data [插入数据]\n     * @return {[Observables]}      [observables 数据]\n     */\n    add(data) {\n        let URL;\n        if (data.cRCUId === null || data.cRCUId === undefined || isNaN(data.cRCUId)) {\n            URL = addUrl //新增\n        } else {\n            URL = editUrl //修改\n        }\n        let body = JSON.stringify(data);\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http.post(URL, body, options).map(res => res.json()).catch(this.handleError);\n    }\n\n    /**\n     * 删除核验人\n     * @param  {[number]} id\n     * @return {[Observables]}  [observables 数据]\n     */\n    delete(id) {\n        let search = new URLSearchParams();\n        search.set('cRCUId', id);\n        return this.http.delete(delUrl, { search: search }).map(res => res.json()).catch(this.handleError);\n    }\n    /**\n     * 发放/暂停核验型奖励\n     * @param  {[type]} id\n     * @param  {[type]} state [0删除,1发放中,2暂停中]\n     * @return {[type]}       [observables 数据]\n     */\n    putState(id, state) {\n        let URL = baseUrl+'/rewardManage/status/edit';\n        let data = { cRPId: id, cRPStatus: state };//0删除,1发放中,2暂停中\n        let body = JSON.stringify(data);\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http.post(URL, body, options).map(res => res.json()).catch(this.handleError);\n    }\n    /**\n     * 关联项目\n     * @param  {[object]} params [cRPId,queryType:[1当前正在关联的/2所有的关联的，包括历史]]\n     * @return {[Observables]}   [observables 数据]\n     */\n    projectsList(params) {\n        let search = new URLSearchParams();\n        search.set('cRPId', params.cRPId);\n        search.set('queryType', params.queryType);\n        let URL = baseUrl+'/rewardManage/projects/list';\n        return this.http.get(URL, { search: search }).map(res => res.json()).catch(this.handleError);\n    }\n    /**\n     * 核验子账号列表\n     * @param  {[object]} params [分页currentPage,pageSize]\n     * @return {[Observables]}   [observables 数据]\n     */\n    list(data) {\n        let search = new URLSearchParams();\n        search.set('currentPage', data.currentPage);\n        search.set('pageSize', data.pageSize);\n        return this.http.get(searchUrl, { search: search }).map(res => res.json()).catch(this.handleError);\n    }\n    /**\n     * 发放总量\n     * @param  {[object]} id [ID]\n     * @return {[Observables]}   [observables 数据]\n     */\n    totalList(id) {\n        let URL = baseUrl+'/rewardManage/check/total/' + id;\n        return this.http.get(URL).map(res => res.json()).catch(this.handleError);\n    }\n\n    private handleError(error: any) {\n        // In a real world app, we might use a remote logging infrastructure\n        let errMsg = error.message || 'Server error';\n        console.error(errMsg); // log to console instead\n        return Observable.throw(errMsg);\n    }\n}\n"]}